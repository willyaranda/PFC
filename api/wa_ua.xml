<?xml version="1.0" encoding="utf-8"?>
<section xml:id="api_wa_ua"
      xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      version="5.0" xml:lang="es">

  <title>API between WebApp and the User Agent</title>
  <para>
    This API is mainly based on the W3C draft as specified in
    <link xlink:href="http://dvcs.w3.org/hg/push/raw-file/default/index.html">
      [http://dvcs.w3.org/hg/push/raw-file/default/index.html]
    </link>
  </para>
  <para>
    With this API the application is able to register itself into the
    Notification Server and recover the public URL to be used as notification
    URL by his Application Server (AS).
  </para>
  <para>
    This API (under the navigator.mozPush object) defines these methods:
    <itemizedlist>
      <listitem>
        requestURL
      </listitem>
      <listitem>
        getCurrentURL
      </listitem>
    </itemizedlist>
    <section>
      <title>navigator.mozPush.requestURL</title>
      <para>
        This method allows the application to register it self into the
        notification server.
        <programlisting language="javascript">
        <![CDATA[
        navigator.mozPush.requestURL(watoken, pbk)
        ]]>
        </programlisting>
      </para>
      <para>
        This method should receive this two parameters:
        <itemizedlist>
          <listitem>
            watoken: The WA Token used to identify the user of the application.
            <para>
              The application developer can decide to use the same WAToken for
              all his users or a group of them so the notification will act
              as a broadcast message
            </para>
            <para>
              It's very important to note that this token (mainly if used to
              identify one particular user) SHALL be a secret. It's recommended
              that this token will be generated by the server using a SHA hash
              based on the login details (as an identification cookie).
            </para>
            <para>
              If this parameter is not provided, a randomized one will be
              generated by the UA engine.
            </para>
          </listitem>
          <listitem>
            pbk: This parameter will contain a RSA Public key coded in BASE64.
            <para>
              This public key will be used by the notification server to
              validate the received messages signature, so the private key
              will be used by the AS to sign the messages.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        It's under definition to send two parameters or only one which will be
        a JSON object:
        <programlisting language="javascript">
        <![CDATA[
        navigator.mozPush.requestURL({
          watoken: <watoken>,
          pbk: <Base64 codified public key>
        })
        ]]>
        </programlisting>
      </para>
      <para>
        Finally this method will response asynchronously with the URL to be
        sent to the AS in order to be able to send notifications.
      </para>
      <programlisting languange="javascript">
        <![CDATA[
        var req = navigator.mozPush.requestURL(this.watoken, this.pbk);
        req.onsuccess = function(e) {
          alert("Received URL: " + req.result.url);
        };
        req.onerror = function(e) {
          alert("Error registering app");
        }
        ]]>
      </programlisting>
    </section>

    <section>
      <title>navigator.mozPush.getCurrentURL</title>
      <para>
        This method allows the application to recover a previously requested
        URL to the UA API, so it's not needed to ask for it to the
        notification server.
        <programlisting language="javascript">
        <![CDATA[
        navigator.mozPush.getCurrentURL()
        ]]>
        </programlisting>
      </para>
      <para>
        This methods will response asynchronously with the URL to be
        sent to the AS in order to be able to send notifications.
      </para>
      <programlisting languange="javascript">
        <![CDATA[
        var req = navigator.mozPush.getCurrentURL();
        req.onsuccess = function(e) {
          alert("URL = " + req.result.url);
        };
        req.onerror = function(e) {
          alert("Error getting URL");
        }
        ]]>
      </programlisting>
    </section>
  </para>
  <para>
    After register the application into the Notification Server, all received
    notification through the given URL will be delivered to all user agents
    which registered the pair (WAToken + PBK).
  </para>
  <para>
    Since the notifications will be received by the UA it's needed a way to
    notify each application. The current specification is using the new
    System Messages infrastructure defined in FirefoxOS.
  </para>
  <para>
    In this case, the application shall register to the "push-notification"
    event handlser:
    <programlisting language="javascript">
    <![CDATA[
    navigator.mozSetMessageHandler("push-notification", function(msg) {
      alert("New Message with body: " + JSON.stringify(msg));
    });
    ]]>
    </programlisting>
  </para>
  <para>
    The complete example:
    <programlisting languange="javascript">
      <![CDATA[
      var req = navigator.mozPush.requestURL(this.watoken, this.pbk);
      req.onsuccess = function(e) {
        alert("Received URL: " + req.result.url);
        navigator.mozSetMessageHandler("push-notification", function(msg) {
          alert("New Message with body: " + JSON.stringify(msg));
        });
      };
      req.onerror = function(e) {
        alert("Error registering app");
      }
      ]]>
    </programlisting>
  </para>
</section>
