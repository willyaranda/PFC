<?xml version="1.0" encoding="utf-8"?>
<chapter xml:id="introduction"
      xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      version="5.0" xml:lang="es">

  <title>Introducción</title>
  <para>
    Una de las grandes ventajas que ha dado Internet al desarrollo de aplicaciones es, aparte de una distribución mucho más sencilla, la posibilidad de poder obtener datos de forma dinámica, la mayoría de veces pudiendo cambiar el comportamiento del propio programa gracias a los datos descargados desde la red o incluso actualizar la información a mostrar a los usuarios dependiendo del momento del día u otras características: nos muestran los resultados de nuestro equipo favorito de fútbol, el tiempo que va a hacer en nuestra ciudad, o incluso mensajería instantánea son algunos de los usos de las tecnologías de Internet para aplicaciones locales.
  </para>
  <para>
    A lo largo de los años, las tecnologías para descargar estos datos han ido variando, acomodándose a los momentos puntuales que han sucedido en Internet, desde redes de módem lentas que conocemos hoy en día hasta redes de fibra óptica capaces de descargar un gran flujo de datos pasando por las olvidadas redes móviles, que son aquellas que más han sufrido esta descarga de datos de una manera, en muchas veces, incontrolada.
  </para>
  <para>
    Así pues, la descarga de toda comunicación puede realizarse de diferentes maneras, ya sea de forma síncrona o asíncrona, pero se pueden agrupar en dos grandes grupos para conseguir esta información:
  </para>
  <para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title>Poll</title>
          <para>
            Periódicamente se pide información al servidor de terceros.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Push</title>
          <para>
            El servidor manda información al cliente cuando hay información disponible para él.
          </para>
        </formalpara>
      </listitem>
    </itemizedlist>
  </para>
  <para>
    Estos dos principales paradigmas son los más usados a lo largo de la historia de Internet y de las aplicaciones. Durante mucho tiempo sólo se usó las soluciones de polling, debido a que no se había desarrollado una tecnología de push eficiente y que era más fácil de implementar (preguntar cada cierto tiempo al servidor si había datos nuevos, manteniendo un pequeño intervalo en el cual cliente y servidor no estaban en sincronía. Sin embargo, ahora que la tecnología se ha ido desarrollando y se han creado nuevos paradigmas, el uso de notificaciones push está en auge, sobre todo gracias a los sistemas operativos móviles (como Android o iOS), así como con nuevos estándares Web que permiten mantener sockets abiertos entre dos equipos diferentes para enviar datos, como WebSockets<footnote><para>http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17</para></footnote> y Server-sent Events<footnote><para>http://dev.w3.org/html5/eventsource/</para></footnote>.
  </para>
  <para>
    Sin embargo, el primer método está desaconsejado por varios motivos que hacen que las redes se colapsen con su uso, o bien que sea muy ineficiente. El primero de ellos es porque usa un alto número de conexiones hacia el servidor de terceros para preguntar si hay datos. En segundo lugar, porque esas conexiones no siempre son interesantes de realizar, ya que puede que realmente no haya datos, pero nosotros preguntamos si los hay, colapsando tanto el servidor como la red con paquetes "inútiles". Y es la conjunción de estos dos problemas (realizar conexiones y que sean para nada) lo que indica que debería haber otra tecnología de recogida de información más eficaz y amigable con las redes.
  </para>
  <para>
    Es por esto que los métodos de recogida de información basados en tecnologías push son ampliamente usados para la descarga de datos de forma asíncrona, ya que sólo piden los datos cuando realmente son necesarios. Sin embargo, aunque estos métodos a primera vista puedan verse como más eficientes que los de polling, también tienen varias desventajas y son realmente válidos para conexiones estables y sin limitaciones, pero muy poco efectivos y muy perjudiciales para las redes móviles, como las de telefonía.
  </para>

  <section>
    <title>Resumen</title>
    <para>
      La creación de un sistema de notificaciones push, con un API sencilla y fácil de utilizar, transparente para los desarrolladores de aplicaciones, con el objetivo de que funcione en diferentes tipos de redes de datos, como celulares o ADSL, en el dominio de paquetes o de circuitos, y haga un uso mínimo de recursos y de batería, utilizando todas las peculiaridades de cada servicio para que sea la mejor solución en cada situación.
    </para>
  </section>

  <section>
    <title>Objetivos</title>
    <itemizedlist>
      <listitem>
        <para>
          Explicar por qué es un problema usar cualquiera de las dos soluciones planteadas al inicio del capítulo en dispositivos móviles y redes celulares, viendo cuál es el problema inicial, las singularidades de dichas redes móviles y cómo pueden mejorarse.
        </para>
      </listitem>
      <listitem>
        <para>
          Creación de una plataforma de mensajería push que sea amigable para los dispositivos móviles con las consideraciones expuestas en el punto anterior: que no use demasiada batería, que sea interesante para las operadoras móviles y que reduzca el consumo de ancho de banda y de señalización en la red celular.
        </para>
      </listitem>
      <listitem>
        <para>
          Implementación de este mecanismo de push, no sólo en su parte servidor si no en su parte cliente. Este desarrollo está englobado en la creación del sistema operativo para móviles Firefox OS.
        </para>
      </listitem>
      <listitem>
        <para>
          Estandarización al organismo W3C, para que sea implantado por todos los navegadores y que haya una mejor unión entre las redes de telefonía móvil y el mundo de Internet, para el intercambio de datos de forma eficiente.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Descripción del servicio</title>
    <para>
      La plataforma del servidor de notificaciones se encargará de enviar mensajes push (pequeños mensajes, como conversaciones de chat, una estructura JSON sobre la descripción de un partido de fútbol…) a terminales que están dentro de las redes móviles, exponiendo unas APIs claras y sencillas, tanto para el desarrollador de la aplicación web como para el creador de los sistemas operativos.
    </para>
    <para>
      La principal idea de crear este servicio es la de usar de una forma mucho más eficiente los recursos de las redes móviles por lo que el uso de la batería será menor, a la vez que se reduciría el tráfico de señalización en la red de telefonía móvil, lo que permitiría a las empresas de telecomunicaciones el ahorrar recursos como ofrecer un mejor servicio a sus usuarios.
    </para>
  </section>

</chapter>
