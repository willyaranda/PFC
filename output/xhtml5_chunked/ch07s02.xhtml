<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Investigar nuevas tecnologías</title><link rel="stylesheet" type="text/css" href="docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.77.1"/><link rel="prev" href="ch07.xhtml" title="Capítulo 7. Lecciones aprendidas"/><link rel="next" href="ch07s03.xhtml" title="Tener tests unitarios y funcionales"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Investigar nuevas tecnologías</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch07.xhtml">Anterior</a> </td><th style="width: 60%; text-align: center; ">Capítulo 7. Lecciones aprendidas</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch07s03.xhtml">Siguiente</a></td></tr></table><hr/></div></header><section class="section" id="idp800848"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Investigar nuevas tecnologías</h2></div></div></div><p>
      Uno de los mayores retos del proyecto ha sido el uso de una tecnología nueva pero muy emergente y con una comunidad enorme detrás como es Node.js. Este lenguaje de programación permite hacer iteraciones muy rápidas, con muchos módulos para añadir características de una manera muy sencilla. Sin embargo, es JavaScript, lo que hace pensar a muchas personas que no es válido para desarrollo de backend, como sí lo podría ser PHP, Ruby o Python, expresamente diseñados para eso, ya que existe el concepto de que JavaScript sólo se ejecuta en el navegador de los usuarios, y su único cometido es el de manipular el DOM<a href="#ftn.idp802384" class="footnote"><sup class="footnote" id="idp802384">[36]</sup></a> de la página y poder hacer interacciones y cambios en tiempo real, incluso pudiendo hacer peticiones AJAX para agregar contenido de forma dinámica.
    </p><p>
      Sin embargo JavaScript es uno de los lenguajes más denostados y minusvalorados, ya que posee un montón de características que lo hacen especialmente rápido y, sobre todo, divertido de programar, amén de una velocidad de ejecución cada vez más rápida gracias a la competencia que se ha ido desarollando los últimos años entre los principales desarrolladores de navegadores de Internet, que al final son los principales valedores de crear intérpretes de JavaScript más complejos, rápidos y eficientes.
    </p><p>
      La idea detrás de Node.js es que sea asíncrono y esté basado en un bucle de eventos, por lo que toda la programación hay que dirigirla hacia allí. Además, hay que tener en cuenta que JavaScript no tiene hilos, pero tampoco es necesario por la implementación del lenguaje (usando callbacks y eventos). Así pues, el cambio de mentalidad también es significativo, ya que es poco común en la programación estructurada tipo C o C++ el uso de eventos (aunque obviamente hay librerías para poder usarlos), mientras que en JavaScript, y en concreto en Node.js, lo son todo.
    </p><p>
      Así pues, muchas veces el código queda poco ordenado, debido a que la programación no es lineal, si no que puede ocurrir que una entrada empiece por la primera función, pero que tenga que llamar a la tercera que a su vez llama a la continuación de la primera para devolver la ejecución a la inicial. Sin embargo, pasada la diversión final con callbacks y eventos, Node.js ha destacado como un lenguaje muy potente, versátil y sobre todo, rápido y eficiente.
    </p><div class="footnotes"><br/><hr class="footnote-hr"/><div id="ftn.idp802384" class="footnote"><p><a href="#idp802384" class="para"><sup class="para">[36] </sup></a><abbr class="acronym">DOM</abbr>: Document Object Model</p></div></div></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch07.xhtml">Anterior</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch07.xhtml">Subir</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch07s03.xhtml">Siguiente</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Capítulo 7. Lecciones aprendidas </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="index.xhtml">Inicio</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Tener tests unitarios y funcionales</td></tr></table></div></footer></body></html>
