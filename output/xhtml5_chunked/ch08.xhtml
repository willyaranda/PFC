<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Capítulo 8. Futuro: v2 y siguientes</title><link rel="stylesheet" type="text/css" href="docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.77.1"/><link rel="prev" href="ch07s06.xhtml" title="La importancia del hardware"/><link rel="next" href="ch08s02.xhtml" title="Recepción segura de token de usuario"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Capítulo 8. Futuro: v2 y siguientes</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch07s06.xhtml">Anterior</a> </td><th style="width: 60%; text-align: center; "> </th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch08s02.xhtml">Siguiente</a></td></tr></table><hr/></div></header><section xml:lang="es" class="chapter" id="future"><div class="titlepage"><div><div><h1 class="title">Capítulo 8. Futuro: v2 y siguientes</h1></div></div></div><div class="toc"><div class="toc-title">Tabla de contenidos</div><ul><li><span class="section"><a href="ch08.xhtml#idp965152">Sobreescribir notificaciones</a></span></li><li><span class="section"><a href="ch08s02.xhtml">Recepción segura de token de usuario</a></span></li><li><span class="section"><a href="ch08s03.xhtml">Cambio en el tamaño máximo</a></span></li><li><span class="section"><a href="ch08s04.xhtml">Poder enviar números de versión</a></span></li><li><span class="section"><a href="ch08s05.xhtml">Implementar soporte para IPv6</a></span></li><li><span class="section"><a href="ch08s06.xhtml">Implementar prioridades</a></span></li><li><span class="section"><a href="ch08s07.xhtml">PINGs de backup</a></span></li><li><span class="section"><a href="ch08s08.xhtml">Soporte WAP push</a></span></li><li><span class="section"><a href="ch08s09.xhtml">Control de abuso</a></span></li><li><span class="section"><a href="ch08s10.xhtml">Soporte a diferentes servidores de notificaciones</a></span></li><li><span class="section"><a href="ch08s11.xhtml">Control de presencia</a></span></li><li><span class="section"><a href="ch08s12.xhtml">Control de entrega de notificaciones</a></span></li></ul></div><p>
    Este capítulo está dedicado a todas aquellas ideas que se han quedado por el camino o que no son tan importantes para implementar en la primera versión del servidor de notificaciones, pero que podrían ser interesantes para futuras versiones o que se han pedido por otros proyectos (como pueden ser de mensajería instantánea).
  </p><p>
    Así pues, algunos de ellos tienen más prioridad que otros, algunos pueden tener más capacidad real de ser usados que otros, pero es posible que muchos de ellos lleguen a implementarse finalmente, y formen parte de la especificación estandarizada por el W3C.
  </p><section class="section" id="idp965152"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Sobreescribir notificaciones</h2></div></div></div><p>
      Una de las características más interesantes que permiten otros servidores de notificaciones es la posibilidad de sobreescribir notificaciones enviadas previamente en el tiempo pero que además no hayan sido entregadas, por lo que podría añadir más información, o bien cancelarse.
    </p><div class="example" id="idp966480"><div class="example-title">Ejemplo 8.1. Notificación sobre el desarrollo de un partido de fútbol</div><div class="example-contents"><p>
        En el caso de una aplicación de resultados de fútbol, podría ser que cada notificación tuviera un estándar definido para indicar los goles, cambios de jugadores, tarjetas y demás incidencias. Podría ser que en un momento determinado, uno de los equipos marque un gol, y se requiera avisar a todos los usuarios para que la información se actualice. Sin embargo, se podría pensar en enviar un mensaje push con sólo la información determinada, pero, ¿y si alguien no ha recibido los anteriores? Requiere mucha más lógica por parte de la aplicación el recibir todos los mensajes, ordenarlos y pintarlos de una forma cronológica, cuando el orden de entrega no está garantizado.
      </p><p>
        Así entonces, la idea podría ser la de que el mensaje tuviera un identificador fijo para el partido, por ejemplo <code class="code">valencia-madrid-liga-20130120</code> y que cada vez que hubiera un cambio que haya que enviar a los usuarios se añadiera más contenido, sobreescribiendo a los dispositivos que aún no hayan recibido la notificación con esta nueva (en vez de tener <code class="code">N</code> mensajes, habría <code class="code">1</code> mensaje con <code class="code">N</code> eventos), y siempre tendrían lo último, independientemente del número de eventos que haya habido antes. En el caso de dispositivos que estén recibiendo notificaciones que ahora se sobreescriben, simplemente sería implementar la lógica de descartar la información anterior y pintar todo de nuevo, o bien hacer caso omiso de lo antiguo y utilizar sólo los nuevos eventos.
      </p></div></div><br class="example-break"/></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch07s06.xhtml">Anterior</a> </td><td style="width: 20%; text-align: center; "> </td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch08s02.xhtml">Siguiente</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">La importancia del hardware </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="index.xhtml">Inicio</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Recepción segura de token de usuario</td></tr></table></div></footer></body></html>
