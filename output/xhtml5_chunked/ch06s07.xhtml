<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>UDP para notificaciones</title><link rel="stylesheet" type="text/css" href="docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.77.1"/><link rel="prev" href="ch06s06.xhtml" title="Comunicación cifrada vía SSL"/><link rel="next" href="ch06s08.xhtml" title="Entrega de notificaciones a las aplicaciones"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">UDP para notificaciones</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch06s06.xhtml">Anterior</a> </td><th style="width: 60%; text-align: center; ">Capítulo 6. Seguridad</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch06s08.xhtml">Siguiente</a></td></tr></table><hr/></div></header><section class="section" id="idp50512"><div class="titlepage"><div><div><h2 class="title" style="clear: both">UDP para notificaciones</h2></div></div></div><p>
      Uno de los hechos diferenciadores del servidor de notificaciones, como se ha ido comentando durante todo el desarrollo de este proyecto, es que no es necesario mantener un socket o una conexión abierta entre el teléfono (<code class="code">UA</code>) y el propio servidor para ser notificado de que hay información pendiente.
    </p><p>
      Así pues, se ha decidido que el paquete que se envía desde el servidor de notificaciones (<code class="code">NS</code>) hacia el dispositivo (<code class="code">UA</code>) sea del tipo UDP, por las siguientes cuestiones:
      </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p>
            El paquete UDP, no llevará ningún tipo de contenido. Y si lo lleva, será descartado. Esto es debido a que no es necesario que haya corrección de errores, ni aceptación (también llamados <code class="code">ACK</code>), no importa el orden (de hecho, no hay orden implícito), y tampoco es necesario un control de congestión.
          </p></li><li class="listitem"><p>
            Utilizar TCP hubiera hecho que la señalización en la red sea mucho mayor, ya que para hacer un simple "ping" para que el dispositivo (<code class="code">UA</code>) se entere de que tiene una nueva notificación, sería necesario tener control de aceptación, retransmisión, temporizadores, orden, control de congestión… y en general demasiado cargado para algo que no requiere ningún <code class="code">payload</code> para ser leído.
          </p></li></ol></div><p>
    </p><div style="margin-left: 0.5in; margin-right: 0.5in;" class="note"><h3 class="title">Nota</h3><p>Probablemente en el futuro se añada algún mecanismo de información de cambio de puerto, por ejemplo: como es fácil mandar un paquete UDP a los diferenes dispositivos para que se despierten a un puerto por defecto (como es el caso de la primera versión, que está fijado en el <code class="code">5000</code>), estos automáticamente se conectan al servidor de notificaciones para descargar los mensajes, pero que, al ser un ataque, no habría. La idea es que si esto sucede, el dispositivo se re-registre de nuevo en el servicio indicando otro puerto, para que haya menos posibilidades de inundar el servidor.</p></div></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch06s06.xhtml">Anterior</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch06.xhtml">Subir</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch06s08.xhtml">Siguiente</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Comunicación cifrada vía SSL </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="index.xhtml">Inicio</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Entrega de notificaciones a las aplicaciones</td></tr></table></div></footer></body></html>
